
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'CBAF6F53D450F90E75E8686A8710E507'
    
_lr_action_items = {'LBRACKET':([2,3,5,6,8,12,13,14,15,17,38,39,41,44,67,72,73,74,79,92,],[-5,-8,-7,-6,10,-24,-10,-9,30,-11,30,10,-12,-25,77,30,30,-13,85,85,]),'NULL':([38,72,73,],[52,52,52,]),'MINUS':([10,30,31,40,64,65,77,85,88,96,],[26,26,26,26,26,26,26,26,26,26,]),'DOT':([2,3,5,6,8,11,12,13,14,17,39,41,44,45,67,74,79,92,94,],[-5,-8,-7,-6,16,16,-24,-10,-9,-11,16,-12,-25,16,16,-13,16,16,16,]),'AMBER':([38,72,73,],[53,53,53,]),'CONST_HEX':([10,30,31,40,64,65,77,85,88,96,],[19,19,19,19,19,19,19,19,19,19,]),'FLOATING_CONSTANT':([10,24,25,26,27,30,31,40,64,65,77,85,88,96,],[-65,42,-20,-21,-19,-65,-65,-65,-65,-65,-65,-65,-65,-65,]),'SEMI':([2,3,5,6,12,13,14,17,18,19,20,21,22,28,29,39,41,42,43,44,47,48,49,50,51,52,54,55,56,57,58,59,60,61,63,66,67,68,69,70,74,76,78,80,81,82,89,91,98,],[-5,-8,-7,-6,-24,-10,-9,-11,-15,-23,-17,-14,-16,-27,45,-28,-12,-22,-18,-25,-35,65,-45,-47,-48,-42,-63,-62,72,-40,-43,-61,-44,-46,-26,-34,-52,-51,-50,-49,-13,-36,-54,-41,-64,-37,-55,-53,-38,]),'TO':([18,19,20,21,22,23,42,43,46,],[-15,-23,-17,-14,-16,40,-22,-18,64,]),'PLUS':([2,3,5,6,10,12,13,14,17,18,19,20,21,22,30,31,39,40,41,42,43,44,49,50,51,52,54,55,57,58,59,60,61,64,65,66,67,68,69,70,74,77,78,80,81,82,85,88,89,91,96,98,],[-5,-8,-7,-6,25,-24,-10,-9,-11,-15,-23,-17,-14,-16,25,25,-28,25,-12,-22,-18,-25,-45,-47,-48,-42,-63,-62,73,-43,-61,-44,-46,25,25,-34,-52,-51,-50,-49,-13,25,-54,73,73,-37,25,25,-55,-53,25,-38,]),'COMMA':([2,3,5,6,12,13,14,17,39,41,44,74,82,84,86,87,94,95,97,],[-5,-8,-7,-6,-24,-10,-9,-11,-28,-12,-25,-13,88,-57,-60,92,-59,-56,-58,]),'$end':([1,4,7,9,18,19,20,21,22,32,33,34,35,36,37,42,43,66,71,82,98,],[-1,-2,0,-3,-15,-23,-17,-14,-16,-30,-29,-32,-4,-31,-33,-22,-18,-34,-39,-37,-38,]),'IDENT':([0,1,4,9,16,18,19,20,21,22,32,33,34,35,36,37,42,43,53,66,71,82,98,],[3,3,-2,-3,3,-15,-23,-17,-14,-16,-30,-29,-32,-4,-31,-33,-22,-18,67,-34,-39,-37,-38,]),'INFINITY':([10,30,31,40,64,65,77,85,88,96,],[20,20,20,20,20,20,20,20,20,20,]),'RBRACE':([2,3,5,6,12,13,14,17,18,19,20,21,22,28,29,39,41,42,43,44,47,48,63,74,76,84,86,87,94,95,97,],[-5,-8,-7,-6,-24,-10,-9,-11,-15,-23,-17,-14,-16,-27,44,-28,-12,-22,-18,-25,-35,66,-26,-13,-36,-57,-60,91,-59,-56,-58,]),'PERCENT':([18,19,20,21,22,42,43,93,],[-15,-23,-17,-14,-16,-22,-18,96,]),'CONST_DEC':([10,24,25,26,27,30,31,40,64,65,77,85,88,96,],[-65,43,-20,-21,-19,-65,-65,-65,-65,-65,-65,-65,-65,-65,]),'IN':([2,3,5,6,8,12,13,14,17,39,41,44,74,],[-5,-8,-7,-6,15,-24,-10,-9,-11,-28,-12,-25,-13,]),'LBRACE':([2,3,5,6,8,12,13,14,15,17,38,39,41,44,67,72,73,74,],[-5,-8,-7,-6,11,-24,-10,-9,31,-11,31,11,-12,-25,79,31,31,-13,]),'RDBRACE':([2,3,5,6,12,13,14,17,18,19,20,21,22,39,41,42,43,44,49,50,51,52,54,55,56,57,58,59,60,61,66,67,68,69,70,74,78,80,81,82,89,91,98,],[-5,-8,-7,-6,-24,-10,-9,-11,-15,-23,-17,-14,-16,-28,-12,-22,-18,-25,-45,-47,-48,-42,-63,-62,71,-40,-43,-61,-44,-46,-34,-52,-51,-50,-49,-13,-54,-41,-64,-37,-55,-53,-38,]),'STRING_LITERAL':([38,72,73,],[58,58,58,]),'ANYTHING':([15,],[33,]),'RBRACKET':([18,19,20,21,22,23,42,43,62,75,83,90,],[-15,-23,-17,-14,-16,41,-22,-18,74,82,89,94,]),'LDBRACE':([15,],[38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ValueEstimateList':([0,],[1,]),'HexNumber':([10,30,31,40,64,65,77,85,88,96,],[18,18,18,18,18,18,18,18,18,18,]),'ValueEstimate':([0,1,],[4,9,]),'AddressScalarVariable':([53,],[69,]),'MemExpression':([38,72,73,],[57,80,81,]),'Field':([8,11,39,45,67,79,92,94,],[12,28,12,63,78,86,86,97,]),'ComboExpression':([38,72,73,],[51,51,51,]),'AddressVariable':([53,],[70,]),'AddressFieldList':([79,],[87,]),'ValueSet':([15,38,72,73,],[32,54,54,54,]),'AddressField':([79,92,],[84,95,]),'DecNumber':([10,30,31,40,64,65,77,85,88,96,],[21,21,21,21,21,21,21,21,21,21,]),'SingleRange':([8,39,],[13,13,]),'MemExpressionList':([38,],[56,]),'DoubleRange':([8,39,],[17,17,]),'Variable':([0,1,16,],[8,8,39,]),'empty':([10,30,31,40,64,65,77,85,88,96,],[27,27,27,27,27,27,27,27,27,27,]),'FieldList':([11,],[29,]),'AddressCompoundVariable':([53,],[68,]),'ArrayVariable':([0,1,16,],[6,6,6,]),'Value':([15,],[35,]),'NumberRange':([8,39,],[14,14,]),'ValueMemSet':([15,],[37,]),'ValueRangeExpression':([38,72,73,],[49,49,49,]),'ScalarVariable':([0,1,16,],[2,2,2,]),'StructVariable':([0,1,16,],[5,5,5,]),'ValueSetExpression':([38,72,73,],[50,50,50,]),'Float':([10,30,31,40,64,65,77,85,88,96,],[22,22,22,22,22,22,22,22,22,22,]),'Number':([10,30,31,40,64,65,77,85,88,96,],[23,46,47,62,75,76,83,90,93,98,]),'Sign':([10,30,31,40,64,65,77,85,88,96,],[24,24,24,24,24,24,24,24,24,24,]),'ValueRange':([15,38,72,73,],[36,59,59,59,]),'NumberList':([31,],[48,]),'File':([0,],[7,]),'AddressExpression':([38,72,73,],[60,60,60,]),'ValueRangePeriodicity':([15,38,72,73,],[34,55,55,55,]),'ValueRangePeriodicityExpression':([38,72,73,],[61,61,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> File","S'",1,None,None,None),
  ('File -> ValueEstimateList','File',1,'p_File','framaclog_parser.py',28),
  ('ValueEstimateList -> ValueEstimate','ValueEstimateList',1,'p_ValueEstimateList','framaclog_parser.py',33),
  ('ValueEstimateList -> ValueEstimateList ValueEstimate','ValueEstimateList',2,'p_ValueEstimateList','framaclog_parser.py',34),
  ('ValueEstimate -> Variable IN Value','ValueEstimate',3,'p_ValueEstimate','framaclog_parser.py',39),
  ('Variable -> ScalarVariable','Variable',1,'p_Variable','framaclog_parser.py',44),
  ('Variable -> ArrayVariable','Variable',1,'p_Variable','framaclog_parser.py',45),
  ('Variable -> StructVariable','Variable',1,'p_Variable','framaclog_parser.py',46),
  ('ScalarVariable -> IDENT','ScalarVariable',1,'p_ScalarVariable','framaclog_parser.py',51),
  ('ArrayVariable -> Variable NumberRange','ArrayVariable',2,'p_ArrayVariable','framaclog_parser.py',56),
  ('NumberRange -> SingleRange','NumberRange',1,'p_NumberRange','framaclog_parser.py',61),
  ('NumberRange -> DoubleRange','NumberRange',1,'p_NumberRange','framaclog_parser.py',62),
  ('SingleRange -> LBRACKET Number RBRACKET','SingleRange',3,'p_SingleRange','framaclog_parser.py',67),
  ('DoubleRange -> LBRACKET Number TO Number RBRACKET','DoubleRange',5,'p_DoubleRange','framaclog_parser.py',72),
  ('Number -> DecNumber','Number',1,'p_Number','framaclog_parser.py',77),
  ('Number -> HexNumber','Number',1,'p_Number','framaclog_parser.py',78),
  ('Number -> Float','Number',1,'p_Number','framaclog_parser.py',79),
  ('Number -> INFINITY','Number',1,'p_Number','framaclog_parser.py',80),
  ('DecNumber -> Sign CONST_DEC','DecNumber',2,'p_DecNumber','framaclog_parser.py',88),
  ('Sign -> empty','Sign',1,'p_Sign','framaclog_parser.py',93),
  ('Sign -> PLUS','Sign',1,'p_Sign','framaclog_parser.py',94),
  ('Sign -> MINUS','Sign',1,'p_Sign','framaclog_parser.py',95),
  ('Float -> Sign FLOATING_CONSTANT','Float',2,'p_Float','framaclog_parser.py',103),
  ('HexNumber -> CONST_HEX','HexNumber',1,'p_HexNumber','framaclog_parser.py',108),
  ('StructVariable -> Variable Field','StructVariable',2,'p_StructVariable','framaclog_parser.py',113),
  ('StructVariable -> Variable LBRACE FieldList RBRACE','StructVariable',4,'p_StructVariable','framaclog_parser.py',114),
  ('FieldList -> FieldList SEMI Field','FieldList',3,'p_FieldList','framaclog_parser.py',122),
  ('FieldList -> Field','FieldList',1,'p_FieldList','framaclog_parser.py',123),
  ('Field -> DOT Variable','Field',2,'p_Field','framaclog_parser.py',128),
  ('Value -> ANYTHING','Value',1,'p_Value','framaclog_parser.py',133),
  ('Value -> ValueSet','Value',1,'p_Value','framaclog_parser.py',134),
  ('Value -> ValueRange','Value',1,'p_Value','framaclog_parser.py',135),
  ('Value -> ValueRangePeriodicity','Value',1,'p_Value','framaclog_parser.py',136),
  ('Value -> ValueMemSet','Value',1,'p_Value','framaclog_parser.py',137),
  ('ValueSet -> LBRACE NumberList RBRACE','ValueSet',3,'p_ValueSet','framaclog_parser.py',142),
  ('NumberList -> Number','NumberList',1,'p_NumberList','framaclog_parser.py',147),
  ('NumberList -> NumberList SEMI Number','NumberList',3,'p_NumberList','framaclog_parser.py',148),
  ('ValueRange -> LBRACKET Number TO Number RBRACKET','ValueRange',5,'p_ValueRange','framaclog_parser.py',153),
  ('ValueRangePeriodicity -> LBRACKET Number TO Number RBRACKET COMMA Number PERCENT Number','ValueRangePeriodicity',9,'p_ValueRangePeriodicity','framaclog_parser.py',158),
  ('ValueMemSet -> LDBRACE MemExpressionList RDBRACE','ValueMemSet',3,'p_ValueMemSet','framaclog_parser.py',163),
  ('MemExpressionList -> MemExpression','MemExpressionList',1,'p_MemExpressionList','framaclog_parser.py',168),
  ('MemExpressionList -> MemExpressionList SEMI MemExpression','MemExpressionList',3,'p_MemExpressionList','framaclog_parser.py',169),
  ('MemExpression -> NULL','MemExpression',1,'p_MemExpression','framaclog_parser.py',174),
  ('MemExpression -> STRING_LITERAL','MemExpression',1,'p_MemExpression','framaclog_parser.py',175),
  ('MemExpression -> AddressExpression','MemExpression',1,'p_MemExpression','framaclog_parser.py',176),
  ('MemExpression -> ValueRangeExpression','MemExpression',1,'p_MemExpression','framaclog_parser.py',177),
  ('MemExpression -> ValueRangePeriodicityExpression','MemExpression',1,'p_MemExpression','framaclog_parser.py',178),
  ('MemExpression -> ValueSetExpression','MemExpression',1,'p_MemExpression','framaclog_parser.py',179),
  ('MemExpression -> ComboExpression','MemExpression',1,'p_MemExpression','framaclog_parser.py',180),
  ('AddressExpression -> AMBER AddressVariable','AddressExpression',2,'p_AddressExpression','framaclog_parser.py',188),
  ('AddressVariable -> AddressScalarVariable','AddressVariable',1,'p_AddressVariable','framaclog_parser.py',193),
  ('AddressVariable -> AddressCompoundVariable','AddressVariable',1,'p_AddressVariable','framaclog_parser.py',194),
  ('AddressScalarVariable -> IDENT','AddressScalarVariable',1,'p_AddressScalarVariable','framaclog_parser.py',199),
  ('AddressCompoundVariable -> IDENT LBRACE AddressFieldList RBRACE','AddressCompoundVariable',4,'p_AddressCompoundVariable','framaclog_parser.py',204),
  ('AddressCompoundVariable -> IDENT Field','AddressCompoundVariable',2,'p_AddressCompoundVariable','framaclog_parser.py',205),
  ('AddressCompoundVariable -> IDENT LBRACKET Number RBRACKET','AddressCompoundVariable',4,'p_AddressCompoundVariable','framaclog_parser.py',206),
  ('AddressFieldList -> AddressFieldList COMMA AddressField','AddressFieldList',3,'p_AddressFieldList','framaclog_parser.py',218),
  ('AddressFieldList -> AddressField','AddressFieldList',1,'p_AddressFieldList','framaclog_parser.py',219),
  ('AddressField -> LBRACKET Number RBRACKET Field','AddressField',4,'p_AddressField','framaclog_parser.py',224),
  ('AddressField -> LBRACKET Number RBRACKET','AddressField',3,'p_AddressField','framaclog_parser.py',225),
  ('AddressField -> Field','AddressField',1,'p_AddressField','framaclog_parser.py',226),
  ('ValueRangeExpression -> ValueRange','ValueRangeExpression',1,'p_ValueRangeExpression','framaclog_parser.py',236),
  ('ValueRangePeriodicityExpression -> ValueRangePeriodicity','ValueRangePeriodicityExpression',1,'p_ValueRangePeriodicityExpression','framaclog_parser.py',241),
  ('ValueSetExpression -> ValueSet','ValueSetExpression',1,'p_ValueSetExpression','framaclog_parser.py',246),
  ('ComboExpression -> MemExpression PLUS MemExpression','ComboExpression',3,'p_ComboExpression','framaclog_parser.py',251),
  ('empty -> <empty>','empty',0,'p_empty','framaclog_parser.py',256),
]
